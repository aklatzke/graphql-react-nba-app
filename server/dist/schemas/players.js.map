{"version":3,"sources":["../../src/schemas/players.js"],"names":["PlayerType","GraphQLObjectType","name","description","fields","_id","type","GraphQLString","fullname","year","team","desription","gp","pos","age","mpg","min_per","usg_per","tor","fta","ft_per","two_pa","two_per","three_pa","three_per","efg_per","ts_per","ppg","rpg","trb_per","apg","ast_per","spg","bpg","topg","vi","ortg","drtg","QueryType","players","resolve","db","all","player","args","id","root","one","playersById","ids","byIds","playersByTeam","byTeam","PlayersSchema","GraphQLSchema","query","types"],"mappings":"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","file":"players.js","sourcesContent":["import db from '../db'\n\nimport {\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLList,\n} from 'graphql';\n\nconst PlayerType = new GraphQLObjectType({\n  name: \"Player\",\n  description: \"An NBA Player\",\n  fields : () => ({\n    _id: {\n        type: GraphQLString,\n        description: \"ObjectId\"\n    },\n    fullname : {\n        type : GraphQLNonNull(GraphQLString),\n        description: \"The player's full name.\"\n    },\n    year : {\n        type: GraphQLString,\n        description: \"The year of this statline.\"\n    },\n    team : {\n        type: GraphQLString,\n        desription: \"The team the player played for.\"\n    },\n    gp: {\n        type: GraphQLString,\n        description: \"Number of games played.\"\n    },\n    pos: {\n      type: GraphQLString,\n      description: \"Player's primary position.\"\n    },\n    age: {\n      type: GraphQLString,\n      description: \"Player's age.\"\n    },\n    mpg: {\n      type: GraphQLString,\n      description: \"Average minutes per game.\"\n    },\n    min_per: {\n      type: GraphQLString,\n      description: \"Minutes % - amount of team's minutes used while the player was on the floor.\"\n    },\n    usg_per: {\n      type: GraphQLString,\n      description: \"Player's usage percentage.\"\n    },\n    tor : {\n        type: GraphQLString,\n        description: \"Turnover rate\"\n    },\n    fta : {\n        type: GraphQLString,\n        description: \"Free throw attempts\"\n    },\n    ft_per : {\n        type : GraphQLString,\n        description: \"Free throw percentages\"\n    },\n    two_pa : {\n        type : GraphQLString,\n        description: \"Two point attempts.\"\n    },\n    two_per : {\n        type : GraphQLString,\n        description: \"Two point percentage\"\n    },\n    three_pa: {\n        type: GraphQLString,\n        description: \"Three point attempts\",\n    },\n    three_per : {\n        type: GraphQLString,\n        description: \"Three point percentage.\"\n    },\n    efg_per: {\n        type: GraphQLString,\n        description: \"Effective field goal percentage.\"\n    },\n    ts_per : {\n        type: GraphQLString,\n        description: \"True shooting percentage.\"\n    },\n    ppg: {\n        type: GraphQLString,\n        description: \"Points per game.\"\n    },\n    rpg: {\n        type: GraphQLString,\n        description: \"Rebounds per game.\"\n    },\n    trb_per: {\n        type: GraphQLString,\n        description: \"Total rebound percentage.\"\n    },\n    apg: {\n        type: GraphQLString,\n        description: \"Assists per game.\"\n    },\n    ast_per: {\n        type: GraphQLString,\n        description: \"Assist percentage.\"\n    },\n    spg: {\n        type: GraphQLString,\n        description: \"Steals per game.\"\n    },\n    bpg: {\n        type: GraphQLString,\n        description: \"Blocks per game.\"\n    },\n    topg: {\n        type: GraphQLString,\n        description: \"Turnovers per game.\"\n    },\n    vi: {\n        type: GraphQLString,\n        description: \"Versatility index.\"\n    },\n    ortg: {\n        type: GraphQLString,\n        description: \"Offensive rating.\"\n    },\n    drtg: {\n        type: GraphQLString,\n        description: \"Defensive rating.\"\n    }\n  })\n})\n\nconst QueryType = new GraphQLObjectType({\n    name: 'RootSchema',\n    fields: () => ({\n        players: {\n            type: GraphQLList(PlayerType),\n            resolve: () => db.players.all()\n        },\n        player: {\n            type: PlayerType,\n            args : {\n                id : {\n                    description: \"The id of the player\",\n                    type: GraphQLString\n                }\n            },\n            resolve : (root, { id }) => db.players.one(id)\n        },\n\n        playersById : {\n            type: GraphQLList(PlayerType),\n            args: {\n                ids: {\n                    description: \"Array of player ids\",\n                    type: GraphQLList(GraphQLString)\n                }\n            },\n            resolve: (root, { ids }) => db.players.byIds(ids)\n        },\n\n        playersByTeam: {\n            type: GraphQLList(PlayerType),\n            args: {\n                team : {\n                    description: \"The team code to fetch\",\n                    type: GraphQLString\n                }\n            },\n            resolve: (root, {team}) => db.players.byTeam(team)\n        }\n    })\n})\n\nconst PlayersSchema = new GraphQLSchema({\n    query: QueryType,\n    types: [PlayerType]\n})\n\nexport default PlayersSchema;"]}